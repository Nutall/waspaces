#+TITLE: 深入理解计算机系统
#+AUTHOR: jun.yi
#+DATE:2019.05.17

* 计算机系统漫游
*** 系统的硬件组成
    1. 总线：负责传输定长的字节块，32位或者64位。
    2. I/O设备：系统与外部连接的通道。
    3. 主存：临时存储设备，有DRAM芯片组成。
    4. CPU：解释或执行存储在主存中的指令，程序计数器是一个大小为一个字的存储设备，永远指向主存中当前执行的机器指令？
    5. CPU执行指令步骤
       * 加载：从主存复制一个字节或一个字到寄存器，以覆盖原来的内容。
       * 存储：从寄存器复制一个字节或一个字到主存的某个位置，以覆盖这个位置上原来的内容。
       * 操作：把两个寄存器的内容复制到ALU,ALU处理后讲结果存放到某个寄存器，以覆盖原来的内容。
       * 跳转：从指令本身中抽取一个字，将该字复制到程序计数器（PC）中，以覆盖PC中原来的值。
*** 高速缓存至关重要
*** 虚拟内存
    |--------------------------|
    |       内核虚拟内存       | <-- 用户代码不可见的内存
    |                          |
    |--------------------------|
    |         用户栈           |
    |    （运行时创建的）      |
    |                          |
    |--------------------------|
    |       共享库的内存       |
    |         映射区域         | <-- printf函数
    |                          |
    |--------------------------|
    |         运行时堆         |
    | （运行时由malloc创建的） |
    |                          |
    |--------------------------|
    |        读写数据          |
    |--------------------------| <-- 从hello可执行文件加载进来
    |     只读的代码和数据     |
    |--------------------------| <-- 程序开始
    |                          |
    |--------------------------| <-- 0

    * 程序代码和数据：代码都是从同一个位置开始，代码后面跟着数据。
    * 堆：代码和数据后面紧跟着运行时堆，堆的大小是在运行时由malloc和free这样的C标准库函数动态伸展或收缩。
    * 共享库：
    * 栈：编译器用来实现函数调用，也可以动态的扩展或收缩，当调用函数是扩展，当函数返回是收缩。
    * 内核虚拟地址：地址空间顶部的区域是为内核保留的。
*** Amdahl 定律
*** 并行和并发
* 程序结构和执行
*** 字数据大小
    + 程序称为32位或者64位程序区别在于该程序是如何编译的，而不是运行其的机器。
      |             C声明              |   字节数    |
      |---------------+----------------+------+------|
      | 有符号        | 无符号         | 32位 | 64位 |
      |---------------+----------------+------+------|
      | [signed] char | unsigned char  |    1 |    1 |
      | short         | unsigned short |    2 |    2 |
      | int           | unsigned       |    4 |    4 |
      | long          | unsigned long  |    4 |    8 |
      | int32_t       | uint32_t       |    4 |    4 |
      | int64_t       | uint64_t       |    8 |    8 |
      | char *        |                |    4 |    8 |
      | float         |                |    4 |    4 |
      | double        |                |    8 |    8 |
    + 假设变量x的类型为int，位于地址0x100处，它的16进制值为0x12345678。地址范围0x100 ~ 0x103的字节顺序依赖机器类型：
      大端类型：
      | 0x100 | 0x101 | 0x102 | 0x103 |
      |-------+-------+-------+-------|
      |    12 |    34 |    56 |    78 |
      小端类型：
      | 0x100 | 0x101 | 0x102 | 0x103 |
      |-------+-------+-------+-------|
      |    78 |    56 |    34 |    12 |
